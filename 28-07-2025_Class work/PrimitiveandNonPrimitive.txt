package com.wipro;



public class PrimitiveandNonPrimitive {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
		//Primitive Data Types --- BAsic Built in types that stores values directly in memory
		
		/*byte b=10;  //1 byte - 8bits
		short s= 20; //2 bytes - 16 bits
		int  a= 20;// 4 bytes - 32 bits
		long l=4556L;// 8 bytes - 64bits
		float f=45.50f // 4 bytes - 32 bits
		double d = 45.78// 8 bytes - 64bits
		char c= 'A';//2 bytes - 16 bits
		boolean flag = true/flase; //1 bit
		
		// To convert from lower size to an upper size no casting is requried and it is implicit casting
		//upward casting-widening casting
		byte a =10;
		short s =a;//No casting  
		there is no data loss
		
		
		// TO convert higher size to lower size  then casting is requried and it is explicit casting
		//downward casting - Narrowing casting
		short s = 10;
		byte b = (byte)s;//casting
		have data loss
		*/
		
		// Use of primitive data types is more 
		//critical in performance based applications
		//like calculations , counters, flags
		//limitations are that they do provide built in
		//methods (eg char canot call .toUpperCase())
	
		
		
		//NON-Primitive Data types---complex types that stores the references of the memory object
		//(variable Size)
		//String , Array ,Class, Interface, Records, Enumeration
		
		String firstName ="Madhu";//it is immutable
		int[] arr = {3,4,5};
		//Any noun -- Class is a blueprint or a template which is a non primitive data type which
		//defines the different types of data
		class Employee {String name; int age; int empId;}
		//To access the class we use object of a class
		
		//Employee e new Employee();
		
		//Interface is also a blueprint of all abstract methods to declare it
		
		interface Swiggy{void order();}
		
		
		//Enum is a special class that represents a group of named constants (unchangeble, predefined)
		enum Day
		{
			Monday , Tuesday , Wednesday , Thursday , Friday , Saturday , Sunday 
		}
		
		// To access these vales
		//Day today = Day.Monday;
		
		//Record - It is a compact and immutable data class that automatically provides getter, toString, equals(),hashCode(), constructor
		//record User (String name, )
		
		
	}

}
